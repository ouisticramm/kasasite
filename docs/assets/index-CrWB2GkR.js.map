{"version":3,"file":"index-CrWB2GkR.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../src/components/Banner.jsx","../../src/components/Cards.jsx","../../src/Data/BannerData.js","../../src/Pages/Home.jsx","../../src/assets/images/kasa-logo.svg","../../src/Layout/Header.jsx","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/Layout/Main.jsx","../../src/assets/images/kasa-logo-white.svg","../../src/Layout/Footer.jsx","../../src/assets/images/ArrowUp.svg","../../src/components/Collapse.jsx","../../src/assets/images/ArrowLeft.svg","../../src/components/Carousel.jsx","../../src/assets/images/star-rate.svg","../../src/assets/images/emptyStar(1).svg","../../src/components/Apartment_Head.jsx","../../src/Pages/Apartmentrental.jsx","../../src/Pages/About.jsx","../../src/assets/images/404.png","../../src/Pages/ErrorPage.jsx","../../src/routes/router.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @remix-run/router v1.19.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.unstable_patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // FIFO queue of previously discovered routes to prevent re-calling on\n  // subsequent navigations to the same path\n  let discoveredRoutesMaxSize = 1000;\n  let discoveredRoutes = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = m => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (typeof m.route.loader === \"function\" && m.route.loader.hydrate === true) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return loaderData && loaderData[m.route.id] !== undefined || errors && errors[m.route.id] !== undefined;\n    };\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: opts.viewTransitionOpts,\n      unstable_flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let {\n          boundaryId,\n          error\n        } = handleDiscoverRouteError(location.pathname, discoverResult);\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let {\n          boundaryId,\n          error\n        } = handleDiscoverRouteError(location.pathname, discoverResult);\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors).filter(_ref2 => {\n        let [id] = _ref2;\n        return !matchesToLoad.some(m => m.route.id === id);\n      }).forEach(_ref3 => {\n        let [routeId, error] = _ref3;\n        errors = Object.assign(errors || {}, {\n          [routeId]: error\n        });\n      });\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let {\n          error\n        } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false);\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let {\n          error\n        } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref4) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref4;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function handleDiscoverRouteError(pathname, discoverResult) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message: discoverResult.error != null && \"message\" in discoverResult.error ? discoverResult.error : String(discoverResult.error)\n      })\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      // Don't bother re-calling patchRouteOnMiss for a path we've already\n      // processed.  the last execution would have patched the route tree\n      // accordingly so `matches` here are already accurate.\n      if (discoveredRoutes.has(pathname)) {\n        return {\n          active: false,\n          matches\n        };\n      }\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(patchRoutesOnNavigationImpl, pathname, partialMatches, routesToUse, manifest, mapRouteProperties, pendingPatchRoutes, signal);\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function addToFifoQueue(path, queue) {\n    if (queue.size >= discoveredRoutesMaxSize) {\n      let first = queue.values().next().value;\n      queue.delete(first);\n    }\n    queue.add(path);\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      unstable_dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, unstable_dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy) {\n    let results = await callDataStrategyImpl(unstable_dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref5) => {\n        let [name, value] = _ref5;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[0] : undefined;\n  let boundaryMatches = boundaryId ? getLoaderMatchesUntilBoundary(matches, boundaryId) : matches;\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return state.loaderData[route.id] === undefined && (\n      // Don't re-run if the loader ran and threw an error\n      !state.errors || state.errors[route.id] === undefined);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (isInitialLoad || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Idempotent utility to execute patchRoutesOnNavigation() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(patchRoutesOnNavigationImpl, path, matches, routes, manifest, mapRouteProperties, pendingRouteChildren, signal) {\n  let key = [path, ...matches.map(m => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnNavigationImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(routeId, children, routes, manifest, mapRouteProperties);\n          }\n        }\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n    if (pending && isPromise(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  if (routeId) {\n    var _route$children;\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    let dataChildren = convertRoutesToDataRoutes(children, mapRouteProperties, [routeId, \"patch\", String(((_route$children = route.children) == null ? void 0 : _route$children.length) || \"0\")], manifest);\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(children, mapRouteProperties, [\"patch\", String(routesToUse.length || \"0\")], manifest);\n    routesToUse.push(...dataChildren);\n  }\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref6) {\n  let {\n    matches\n  } = _ref6;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init2;\n      if (result.data instanceof Error) {\n        var _result$init;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status\n        };\n      }\n      // Convert thrown unstable_data() to ErrorResponse instances\n      result = new ErrorResponseImpl(((_result$init2 = result.init) == null ? void 0 : _result$init2.status) || 500, undefined, result.data);\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init3, _result$init4;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init3 = result.init) == null ? void 0 : _result$init3.status,\n      headers: ((_result$init4 = result.init) == null ? void 0 : _result$init4.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: (_result$init6 = result.init) != null && _result$init6.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage = \"Unable to match URL \\\"\" + pathname + \"\\\" - the `unstable_patchRoutesOnNavigation()` \" + (\"function threw the following error:\\n\" + message);\n    } else if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isPromise(val) {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename, data as unstable_data };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.26.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts == null ? void 0 : opts.unstable_patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.26.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts == null ? void 0 : opts.unstable_patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts == null ? void 0 : opts.unstable_patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_flushSync: flushSync,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","function Banner({ title, alt, imageUrl }) {\r\n  return (\r\n    <div className=\"banner\">\r\n      <img src={imageUrl} alt={alt} />\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../assets/sass/Components/Cards.scss\";\r\n\r\nfunction Cards() {\r\n  const [apartments, setApartments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/logements.json\")\r\n      .then((res) => res.json())\r\n      .then((res) => setApartments(res))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {apartments.map((apartment) => (\r\n        <Link\r\n          key={apartment.id}\r\n          to={`/apartment/${apartment.id}`}\r\n          className=\"location\"\r\n        >\r\n          <img src={apartment.cover} alt={apartment.title} />\r\n          <div className=\"apartment_subtitle\">{apartment.title}</div>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import \"../assets/sass/Components/Banner.scss\";\r\nexport const homeBanner = {\r\n  title: \"Chez vous, partout et ailleurs\",\r\n  alt: \"Bannière Kasa\",\r\n  imageUrl: \"/homebanner(1).png\",\r\n};\r\n\r\nexport const aboutBanner = {\r\n  title: \"\",\r\n  alt: \"Bannière À propos\",\r\n  imageUrl: \"/AboutBanner.png\",\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Banner from \"../components/Banner.jsx\";\r\nimport Cards from \"../components/Cards.jsx\";\r\nimport \"../assets/sass/Pages/Home.scss\";\r\nimport { homeBanner } from \"../Data/BannerData.js\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Banner {...homeBanner} />\r\n      <div className=\"cards-container\">\r\n        <Cards\r\n          renderCard={(card) => (\r\n            <Link to={`/apartment/${card.id}`} key={card.id}>\r\n              <div className=\"card\">\r\n                <img src={card.cover} alt={card.title} />\r\n                <h3>{card.title}</h3>\r\n              </div>\r\n            </Link>\r\n          )}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default \"data:image/svg+xml,%3csvg%20width='211'%20height='68'%20viewBox='0%200%20211%2068'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M20.5745%2034.6485L9.34014%2046.1362V62.2561H0.5V0H9.34014V34.8338L42.859%200H52.9883L26.6521%2027.9782L54.83%2062.2561H44.5165L20.5745%2034.6485Z'%20fill='%23FF6060'/%3e%3cpath%20d='M119.289%2057.2534L122.789%2050.5831C126.84%2053.3624%20133.102%2055.4005%20139.18%2055.4005C147.099%2055.4005%20150.23%2052.9918%20150.23%2048.9155C150.23%2038.3542%20120.578%2047.4332%20120.578%2028.7193C120.578%2020.1962%20128.129%2014.6376%20140.1%2014.6376C146.178%2014.6376%20153.176%2016.3051%20157.228%2018.8992L153.545%2025.5695C149.309%2022.7902%20144.705%2021.8637%20140.1%2021.8637C132.734%2021.8637%20129.05%2024.643%20129.05%2028.3487C129.05%2039.4659%20158.702%2030.3869%20158.702%2048.7302C158.702%2057.2534%20150.966%2062.6267%20138.443%2062.6267C130.892%2062.812%20123.157%2060.4032%20119.289%2057.2534Z'%20fill='%23FF6060'/%3e%3cpath%20d='M210.822%2033.7221V62.2561H202.718V55.9564C199.956%2060.218%20194.615%2062.6267%20187.248%2062.6267C176.566%2062.6267%20169.936%2056.8828%20169.936%2048.7303C169.936%2041.1335%20174.724%2035.0191%20188.721%2035.0191H202.166V33.3515C202.166%2026.1254%20197.93%2022.0491%20189.642%2022.0491C184.117%2022.0491%20178.408%2024.0872%20174.724%2027.0518L171.225%2020.5668C176.014%2016.6758%20183.012%2014.4523%20190.563%2014.4523C203.639%2014.6376%20210.822%2020.9373%20210.822%2033.7221ZM202.35%2047.8038V41.1335H189.274C180.802%2041.1335%20178.408%2044.4687%20178.408%2048.3597C178.408%2052.9918%20182.275%2055.9564%20188.721%2055.9564C195.167%2056.1417%20200.324%2053.3624%20202.35%2047.8038Z'%20fill='%23FF6060'/%3e%3cpath%20d='M92.0322%2049.8419V62.4414L97.3731%2059.2915V46.6921L92.0322%2049.8419Z'%20fill='%23FF6060'/%3e%3cpath%20d='M106.766%2034.4632L84.8496%2021.6784L72.6944%2014.6376L60.7234%2035.5749L60.9076%2055.2152L82.6396%2068L84.8496%2066.703V48.1744L94.6106%2030.9428L104.556%2036.6866V55.2152L106.766%2053.9182V34.4632Z'%20fill='%23FF6060'/%3e%3c/svg%3e\"","import React from \"react\";\r\nimport \"../assets/sass/Components/Header.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport kasaLogo from \"../assets/images/kasa-logo.svg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"header\">\r\n      <NavLink to=\"/\">\r\n        <div className=\"logo\">\r\n          <img src={kasaLogo} alt=\"logo de kasa\" />\r\n        </div>\r\n      </NavLink>\r\n      <div className=\"nav-links\">\r\n        <NavLink to=\"/\" className=\"nav-link\">\r\n          Accueil\r\n        </NavLink>\r\n        <NavLink to=\"/about\" className=\"nav-link\">\r\n          A propos\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import \"../assets/sass/Layout/Main.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Main({ children }) {\r\n  return <div className=\"main\">{children}</div>;\r\n}\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","export default \"data:image/svg+xml,%3csvg%20width='123'%20height='41'%20viewBox='0%200%20123%2041'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M12.1445%2020.7402L5.62785%2027.4038V36.7544H0.5V0.641846H5.62785V20.8477L25.0709%200.641846H30.9466L15.6699%2016.871L32.0149%2036.7544H26.0324L12.1445%2020.7402Z'%20fill='white'/%3e%3cpath%20d='M69.4054%2033.8526L71.4352%2029.9834C73.7854%2031.5956%2077.4177%2032.7778%2080.9431%2032.7778C85.5367%2032.7778%2087.3529%2031.3806%2087.3529%2029.0161C87.3529%2022.8899%2070.1532%2028.1563%2070.1532%2017.301C70.1532%2012.357%2074.5332%209.13269%2081.4772%209.13269C85.0026%209.13269%2089.0621%2010.1%2091.4124%2011.6047L89.2758%2015.4739C86.8187%2013.8617%2084.148%2013.3243%2081.4772%2013.3243C77.204%2013.3243%2075.0674%2014.9365%2075.0674%2017.0861C75.0674%2023.5347%2092.267%2018.2683%2092.267%2028.9086C92.267%2033.8526%2087.7802%2036.9694%2080.5157%2036.9694C76.1357%2037.0769%2071.6488%2035.6797%2069.4054%2033.8526Z'%20fill='white'/%3e%3cpath%20d='M122.5%2020.2027V36.7543H117.799V33.1001C116.197%2035.5721%20113.099%2036.9693%20108.826%2036.9693C102.63%2036.9693%2098.7837%2033.6374%2098.7837%2028.9084C98.7837%2024.5018%20101.561%2020.9551%20109.68%2020.9551H117.479V19.9878C117.479%2015.7961%20115.022%2013.4316%20110.215%2013.4316C107.01%2013.4316%20103.698%2014.6139%20101.561%2016.3335L99.5315%2012.5718C102.309%2010.3148%20106.369%209.02502%20110.749%209.02502C118.334%209.1325%20122.5%2012.7867%20122.5%2020.2027ZM117.586%2028.371V24.5018H110.001C105.087%2024.5018%20103.698%2026.4364%20103.698%2028.6935C103.698%2031.3804%20105.941%2033.1001%20109.68%2033.1001C113.419%2033.2075%20116.411%2031.5954%20117.586%2028.371Z'%20fill='white'/%3e%3cpath%20d='M53.5946%2029.5537V36.8622L56.6927%2035.0351V27.7266L53.5946%2029.5537Z'%20fill='white'/%3e%3cpath%20d='M62.141%2020.6328L49.4282%2013.2168L42.3774%209.13269L35.4335%2021.2777L35.5403%2032.6703L48.1463%2040.0863L49.4282%2039.334V28.5862L55.0902%2018.5907L60.859%2021.9226V32.6703L62.141%2031.918V20.6328Z'%20fill='white'/%3e%3c/svg%3e\"","import React from \"react\";\r\nimport \"../assets/sass/Layout/Footer.scss\";\r\nimport Logo from \"../assets/images/kasa-logo-white.svg\";\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_logo\">\r\n        {\" \"}\r\n        <img src={Logo} alt=\"logo kasa\" />\r\n      </div>\r\n      <div className=\"footer_text\">\r\n        © 2024 Kasa. All rights reserved<div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export default \"data:image/svg+xml,%3csvg%20width='28'%20height='17'%20viewBox='0%200%2028%2017'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M24.84%2016.3466L27.2%2013.9733L14%200.786621L0.800025%2013.9866L3.16003%2016.3466L14%205.50662L24.84%2016.3466V16.3466Z'%20fill='white'/%3e%3c/svg%3e\"","import React, { useState } from \"react\";\r\nimport \"../assets/sass/Components/Collapse.scss\";\r\nimport ArrowUp from \"../assets/images/ArrowUp.svg\";\r\n\r\nfunction Collapse({ title, content, variant = \"default\" }) {\r\n  const [isContentVisible, setContentVisible] = useState(false);\r\n\r\n  const toggleContent = () => {\r\n    setContentVisible((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className={`collapse-describe collapse-${variant}`}>\r\n      <div className=\"description\" onClick={toggleContent}>\r\n        <span>{title}</span>\r\n        <img\r\n          src={ArrowUp}\r\n          alt=\"Toggle content visibility\"\r\n          className={isContentVisible ? \"rotated\" : \"\"}\r\n        />\r\n      </div>\r\n      <div className={`about_describe ${isContentVisible ? \"visible\" : \"\"}`}>\r\n        {typeof content === \"string\" ? <p>{content}</p> : content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Collapse;\r\n","export default \"data:image/svg+xml,%3csvg%20width='48'%20height='80'%20viewBox='0%200%2048%2080'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M0.960022%2072.3458L8.04002%2079.4258L47.64%2039.8258L8.04002%200.22583L0.960022%207.30583L33.48%2039.8258L0.960022%2072.3458V72.3458Z'%20fill='white'/%3e%3c/svg%3e\"","import React, { useState } from \"react\";\r\nimport \"../assets/sass/Components/Carousel.scss\";\r\nimport Arrow from \"../assets/images/arrowLeft.svg\";\r\n\r\nfunction Carousel({ pictures }) {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const goToNextSlide = () => {\r\n    if (pictures.length > 1) {\r\n      setCurrentIndex((prevIndex) =>\r\n        prevIndex === pictures.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }\r\n  };\r\n\r\n  const goToPrevSlide = () => {\r\n    if (pictures.length > 1) {\r\n      setCurrentIndex((prevIndex) =>\r\n        prevIndex === 0 ? pictures.length - 1 : prevIndex - 1\r\n      );\r\n    }\r\n  };\r\n\r\n  if (!Array.isArray(pictures) || pictures.length === 0) {\r\n    return <div className=\"carousel\">Aucune image disponible</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n      <img\r\n        src={pictures[currentIndex]}\r\n        alt={`Appartement - Image ${currentIndex + 1}`}\r\n        className=\"carousel-image\"\r\n      />\r\n      <button onClick={goToPrevSlide} className=\"carousel-button prev-button\">\r\n        <img src={Arrow} alt=\"Button précédent\" />\r\n      </button>\r\n      <button onClick={goToNextSlide} className=\"carousel-button next-button\">\r\n        <img src={Arrow} alt=\"Button suivant\" />\r\n      </button>\r\n      {pictures.length > 1 && (\r\n        <div className=\"carousel-counter\">\r\n          {currentIndex + 1} / {pictures.length}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Carousel;\r\n","export default \"data:image/svg+xml,%3csvg%20width='36'%20height='36'%20viewBox='0%200%2036%2036'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M19.7212%206.84366C19.4728%206.32809%2018.9479%206%2018.3714%206C17.7949%206%2017.2747%206.32809%2017.0216%206.84366L14.0079%2013.0445L7.27748%2014.0382C6.71506%2014.1225%206.24636%2014.5162%206.07295%2015.0552C5.89953%2015.5942%206.04014%2016.1895%206.44321%2016.5879L11.327%2021.4201L10.174%2028.2491C10.0803%2028.8115%2010.3146%2029.3833%2010.7786%2029.7161C11.2426%2030.0489%2011.8566%2030.0911%2012.3628%2029.8239L18.3761%2026.6133L24.3894%2029.8239C24.8956%2030.0911%2025.5096%2030.0536%2025.9736%2029.7161C26.4376%2029.3786%2026.6719%2028.8115%2026.5782%2028.2491L25.4205%2021.4201L30.3043%2016.5879C30.7073%2016.1895%2030.8526%2015.5942%2030.6745%2015.0552C30.4964%2014.5162%2030.0324%2014.1225%2029.47%2014.0382L22.7349%2013.0445L19.7212%206.84366Z'%20fill='%23FF6060'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20width='36'%20height='36'%20viewBox='0%200%2036%2036'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M19.7212%206.84366C19.4728%206.32809%2018.9479%206%2018.3714%206C17.7949%206%2017.2747%206.32809%2017.0216%206.84366L14.0079%2013.0445L7.27748%2014.0382C6.71506%2014.1225%206.24636%2014.5162%206.07295%2015.0552C5.89953%2015.5942%206.04014%2016.1895%206.44321%2016.5879L11.327%2021.4201L10.174%2028.2491C10.0803%2028.8115%2010.3146%2029.3833%2010.7786%2029.7161C11.2426%2030.0489%2011.8566%2030.0911%2012.3628%2029.8239L18.3761%2026.6133L24.3894%2029.8239C24.8956%2030.0911%2025.5096%2030.0536%2025.9736%2029.7161C26.4376%2029.3786%2026.6719%2028.8115%2026.5782%2028.2491L25.4205%2021.4201L30.3043%2016.5879C30.7073%2016.1895%2030.8526%2015.5942%2030.6745%2015.0552C30.4964%2014.5162%2030.0324%2014.1225%2029.47%2014.0382L22.7349%2013.0445L19.7212%206.84366Z'%20fill='%23E3E3E3'/%3e%3c/svg%3e\"","import React from \"react\";\r\nimport \"../assets/sass/Components/Apartment_Head.scss\";\r\nimport SuperStar from \"../assets/images/star-rate.svg\";\r\nimport Star from \"../assets/images/emptystar(1).svg\";\r\n\r\nfunction Apartment_Head({\r\n  selectedCards: { title, location, tags, host, rating },\r\n}) {\r\n  const stars = [1, 2, 3, 4, 5];\r\n\r\n  return (\r\n    <div className=\"apartment_head\">\r\n      <div className=\"apartment-rental_title\">\r\n        <h1>{title}</h1>\r\n        <h2>{location}</h2>\r\n        <div className=\"apartments_tags\">\r\n          {tags.map((tag) => (\r\n            <span key={tag}>{tag}</span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"apartment_owner\">\r\n        <div className=\"apartment_owner_details\">\r\n          <h3 className=\"name\">{host.name}</h3>\r\n          <div className=\"apartment_owner_badge\">\r\n            <img src={host.picture} alt=\"facepic\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"apartment_owner_stars\">\r\n          {stars.map((level) =>\r\n            rating >= level ? (\r\n              <img\r\n                key={level.toString()}\r\n                className=\"star\"\r\n                src={SuperStar}\r\n                alt=\"rating star\"\r\n              />\r\n            ) : (\r\n              <img\r\n                key={level.toString()}\r\n                className=\"star\"\r\n                src={Star}\r\n                alt=\"rating star\"\r\n              />\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Apartment_Head;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../assets/sass/Pages/Apartmentrental.scss\";\r\nimport Collapse from \"../components/Collapse\";\r\nimport Carousel from \"../components/Carousel\";\r\nimport Apartment_Head from \"../components/Apartment_Head\";\r\n\r\nfunction Apartmentrental() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [selectedCards, setSelectedCards] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchApartmentData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(\"/logements.json\");\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        const apartment = data.find((card) => card.id === id);\r\n        if (!apartment) {\r\n          throw new Error(\"Apartment not found\");\r\n        }\r\n        setSelectedCards(apartment);\r\n      } catch (error) {\r\n        console.error(\"Error fetching apartment data:\", error);\r\n        setError(error.message);\r\n        navigate(\"/error\"); // Redirige vers la page d'erreur\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchApartmentData();\r\n    } else {\r\n      setError(\"No apartment ID provided\");\r\n      setIsLoading(false);\r\n      navigate(\"/error\"); // Redirige vers la page d'erreur\r\n    }\r\n  }, [id, navigate]);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n  if (!selectedCards) return <div>No apartment data found</div>;\r\n\r\n  return (\r\n    <div className=\"Apartment-rental\">\r\n      <Carousel pictures={selectedCards.pictures} />\r\n      <Apartment_Head selectedCards={selectedCards} />\r\n      <div className=\"ADarea\">\r\n        <Collapse\r\n          title=\"Description\"\r\n          content={selectedCards.description}\r\n          className=\"collapse-apartment\"\r\n        />\r\n        <Collapse\r\n          title=\"Équipements\"\r\n          content={\r\n            <ul>\r\n              {selectedCards.equipments.map((equipment, index) => (\r\n                <li key={index}>{equipment}</li>\r\n              ))}\r\n            </ul>\r\n          }\r\n          className=\"collapse-apartment\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Apartmentrental;\r\n","import React from \"react\";\r\nimport AboutBanner from \"../components/Banner\";\r\nimport Collapse from \"../components/Collapse\";\r\nimport aproposData from \"../Data/AboutCollapse.json\";\r\nimport { aboutBanner } from \"../Data/BannerData\";\r\n\r\nfunction About() {\r\n  return (\r\n    <>\r\n      <AboutBanner {...aboutBanner} />\r\n      <div className=\"about_container\">\r\n        {aproposData.map((item) => (\r\n          <Collapse\r\n            key={item.id}\r\n            title={item.titre}\r\n            content={item.description}\r\n            variant=\"about\"\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","export default \"__VITE_ASSET__CvcfdWUM__\"","import React from \"react\";\r\nimport \"../assets/sass/Pages/ErrorPage.scss\";\r\nimport Error from \"../assets/images/404.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div className=\"notfound\">\r\n      <img src={Error} alt=\"Erreur 404\" />\r\n      <h2>Oops! La page que vous demandez n'existe pas</h2>\r\n      <Link to=\"/\">Retournez sur la page d'accueil</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import { createHashRouter, Outlet } from \"react-router-dom\";\r\nimport Home from \"../Pages/Home\";\r\nimport Header from \"../Layout/Header\";\r\nimport Main from \"../Layout/Main\";\r\nimport Footer from \"../Layout/Footer\";\r\nimport Apartment from \"../Pages/Apartmentrental\";\r\nimport About from \"../Pages/About\";\r\nimport ErrorPage from \"../Pages/ErrorPage\";\r\n\r\nconst HeaderFooterLayout = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main>\r\n        <Outlet />\r\n      </Main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\n// Obtenez le basename à partir de l'environnement ou utilisez une chaîne vide par défaut\r\nconst basename = import.meta.env.BASE_URL || \"/\";\r\n\r\nexport const router = createHashRouter(\r\n  [\r\n    {\r\n      path: \"/\",\r\n      element: <HeaderFooterLayout />,\r\n      errorElement: <ErrorPage />,\r\n      children: [\r\n        {\r\n          path: \"/\",\r\n          element: <Home />,\r\n        },\r\n        {\r\n          path: \"/apartment/:id\",\r\n          element: <Apartment />,\r\n        },\r\n        {\r\n          path: \"/about\",\r\n          element: <About />,\r\n        },\r\n        {\r\n          path: \"*\",\r\n          element: <ErrorPage />,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  { basename: basename }\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { RouterProvider } from \"react-router-dom\";\r\nimport { router } from \"./routes/router.jsx\";\r\nimport \"../src/assets/sass/Layout/Main.scss\";\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  <React.StrictMode>\r\n    <RouterProvider router={router} />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","_extends","target","i","source","key","Action","PopStateEventType","createHashHistory","options","createHashLocation","window","globalHistory","pathname","search","hash","parsePath","createLocation","createHashHref","to","base","href","url","hashIndex","createPath","validateHashLocation","location","warning","getUrlBasedHistory","invariant","value","message","cond","createKey","getHistoryState","index","current","state","_ref","path","parsedPath","searchIndex","getLocation","createHref","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","error","replace","createURL","fn","ResultType","immutableRouteKeys","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","id","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","parentsMeta","flattenRoute","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","caseSensitive","regexpSource","_","v","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","ErrorResponseImpl","status","statusText","data","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","TRANSITIONS_STORAGE_KEY","createRouter","init","routerWindow","isBrowser","isServer","detectErrorBoundary","dataRoutes","inFlightDataRoutes","dataStrategyImpl","defaultDataStrategy","patchRoutesOnNavigationImpl","future","unlistenHistory","subscribers","discoveredRoutesMaxSize","discoveredRoutes","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","checkFogOfWar","initialized","errors","isRouteInitialized","fogOfWar","router","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","pendingPatchRoutes","unblockBlockerHistoryUpdate","initialize","historyAction","blockerKey","shouldBlockNavigation","nextHistoryUpdatePromise","resolve","updateBlocker","blockers","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","dispose","deleteFetcher","deleteBlocker","subscribe","newState","opts","completedFetchers","deletedFetchersKeys","fetcher","subscriber","completeNavigation","_temp","_location$state","_location$state2","flushSync","isActionReload","isMutationMethod","actionData","mergeLoaderData","preventScrollReset","viewTransitionOpts","priorPaths","toPaths","getSavedScrollPosition","navigate","normalizedPath","normalizeTo","submission","normalizeNavigateOptions","currentLocation","nextLocation","userReplace","revalidate","interruptActiveLoads","saveScrollPosition","routesToUse","loadingNavigation","notFoundMatches","handleNavigational404","isHashChangeOnly","request","createClientSideRequest","pendingActionResult","findNearestBoundary","actionResult","handleAction","routeId","isErrorResult","getLoadingNavigation","shortCircuited","updatedMatches","handleLoaders","getActionDataForCommit","isFogOfWar","navigation","getSubmittingNavigation","discoverResult","discoverRoutes","boundaryId","handleDiscoverRouteError","actionMatch","getTargetMatch","callDataStrategy","isRedirectResult","normalizeRedirectLocation","startRedirectNavigation","isDeferredResult","boundaryMatch","overrideNavigation","fetcherSubmission","initialHydration","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","matchesToLoad","revalidatingFetchers","getMatchesToLoad","cancelActiveDeferreds","updatedFetchers","markFetchRedirectsDone","updates","getUpdatedRevalidatingFetchers","rf","abortFetcher","abortPendingFetchRevalidations","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect","findRedirect","processLoaderData","deferredData","aborted","_ref2","_ref3","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","revalidatingFetcher","getLoadingFetcher","fetch","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","detectAndHandle405Error","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","r","doneFetcher","resolveDeferredData","isNavigation","_temp2","redirectLocation","isDocumentReload","redirectHistoryAction","formMethod","formAction","formEncType","type","fetcherKey","results","dataResults","callDataStrategyImpl","isRedirectDataStrategyResultResult","response","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","currentMatches","loaderResultsPromise","fetcherResultsPromise","acc","resolveNavigationDeferredResults","resolveFetcherDeferredResults","getFetcher","deleteFetcherAndUpdateState","count","controller","markFetchersDone","keys","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","_ref4","entries","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","signal","partialMatches","isNonHMR","loadLazyRouteChildren","newMatches","addToFifoQueue","newPartialMatches","queue","_internalSetRoutes","newRoutes","patchRoutes","children","patchRoutesImpl","isSubmissionNavigation","prependBasename","fromRouteId","relative","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","isValidMethod","getInvalidBodyError","rawFormMethod","stripHashFromPath","text","_ref5","name","json","searchParams","formData","convertFormDataToSearchParams","convertSearchParamsToFormData","getLoaderMatchesUntilBoundary","boundaryMatches","isInitialLoad","skipActionErrorRevalidation","currentUrl","nextUrl","actionStatus","shouldSkipRevalidation","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","pendingRouteChildren","pending","isPromise","_route$children","dataChildren","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","_ref6","requestContext","loadRouteDefinitionsPromises","dsMatches","loadRoutePromise","shouldLoad","handlerOverride","callLoaderOrAction","staticContext","onReject","runHandler","handler","reject","abortPromise","actualHandler","ctx","handlerPromise","handlerError","dataStrategyResult","isResponse","contentType","isDataWithResponseInit","_result$init2","_result$init","isDeferredData","_result$init3","_result$init4","_result$init5","_result$init6","trimmedMatches","normalizedLocation","isSameBasename","processRouteLoaderData","skipLoaderErrorBubbling","statusCode","foundError","loaderHeaders","pendingError","newLoaderData","mergedLoaderData","_temp5","method","errorMessage","val","deferred","isRevalidatingLoader","unwrap","_window","transitions","sessionPositions","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","UNSAFE_getResolveToMatches","activeRef","React.useRef","React.useCallback","OutletContext","useOutlet","context","outlet","React.createElement","useParams","routeMatch","React.useMemo","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","parentSegments","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","_dataRouterState","_future","renderedMatches","errorIndex","renderFallback","fallbackIndex","needsToRunLoader","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","warningOnce","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","_state$errors","alreadyWarned","Outlet","Router","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","_objectWithoutPropertiesLoose","excluded","sourceKeys","isModifiedEvent","event","shouldProcessLinkClick","_excluded","_excluded2","REACT_ROUTER_VERSION","createHashRouter","parseHydrationData","UNSAFE_mapRouteProperties","deserializeErrors","serialized","UNSAFE_ErrorResponseImpl","ErrorConstructor","ViewTransitionContext","FetchersContext","START_TRANSITION","startTransitionImpl","React","FLUSH_SYNC","flushSyncImpl","ReactDOM","startTransitionSafe","flushSyncSafe","Deferred","reason","RouterProvider","fallbackElement","setStateImpl","React.useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","v7_startTransition","optInStartTransition","setState","isViewTransitionUnavailable","t","React.useEffect","renderPromise","routerFuture","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","MemoizedDataRoutes","React.memo","DataRoutes","UNSAFE_useRoutesImpl","Link","React.forwardRef","_ref7","ref","onClick","reloadDocument","unstable_viewTransition","UNSAFE_NavigationContext","absoluteHref","isExternal","targetUrl","internalOnClick","useLinkClickHandler","handleClick","NavLink","_ref8","ariaCurrentProp","classNameProp","styleProp","routerState","isTransitioning","useViewTransitionState","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","className","style","replaceProp","nextPath","Banner","title","alt","imageUrl","jsxs","jsx","Cards","apartments","setApartments","useState","useEffect","res","apartment","homeBanner","aboutBanner","Home","Fragment","card","kasaLogo","Header","ReactPropTypesSecret","ReactPropTypesSecret_1","emptyFunction","emptyFunctionWithReset","factoryWithThrowingShims","shim","propName","componentName","propFullName","secret","err","getShim","ReactPropTypes","propTypesModule","Main","PropTypes","Logo","Footer","ArrowUp","Collapse","content","variant","isContentVisible","setContentVisible","toggleContent","prev","Arrow","Carousel","pictures","currentIndex","setCurrentIndex","goToNextSlide","prevIndex","goToPrevSlide","SuperStar","Star","Apartment_Head","tags","host","rating","stars","tag","level","Apartmentrental","selectedCards","setSelectedCards","isLoading","setIsLoading","setError","equipment","About","AboutBanner","aproposData","item","Error$1","ErrorPage","Error","HeaderFooterLayout","Apartment"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,12,13,14]}